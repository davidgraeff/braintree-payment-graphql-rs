jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      debug:
        test_flag: ""
        test_kind: Debug
      release:
        test_flag: "--release"
        test_kind: Release
    maxParallel: 3
  steps:

  # maxOS native dependency installation
  - ${{ if eq(parameters.name, 'macOS') }}:
    - script: brew install mysql-connector-c libpq sqlite coreutils
      displayName: 'Install Native Dependencies'

  # Unix Rust installation
  - ${{ if ne(parameters.name, 'Windows') }}:
    - script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $(cat ./rust-toolchain)
        echo "##vso[task.setvariable variable=PATH]$PATH:$HOME/.cargo/bin"
      displayName: 'Install Rust ($(cat ./rust-toolchain))'

  # Windows Rust installation
  - ${{ if eq(parameters.name, 'Windows') }}:
    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y --default-toolchain $(cat ./rust-toolchain)
        echo ##vso[task.setvariable variable=PATH]%PATH%;%USERPROFILE%\.cargo\bin
      displayName: 'Install Rust ($(cat ./rust-toolchain))'

  # Sanity check version information.
  - script: |
      rustup default $(cat ./rust-toolchain)
      rustc -Vv && cargo -V
    displayName: 'Rust/Cargo Version Information'

  - script: cargo test
    displayName: 'Unit & Integration Tests ($(test_kind))'